#!/usr/bin/env python

#  Copyright (C) 2022  David King <dave@daveking.com>
#
#  This Source Code Form is subject to the terms of the Mozilla Public License,
#  v. 2.0.  If a copy of the MPL was not distbuted with this file, You can
#  obtain one at https://mozilla.org/MPL/2.0/.
#################################################################################
#  Mine cryptocurrency when the screensaver is active.
#
#  Written for systems that use either Xscreensaver or the Gnome screen saver.

import shutil
import subprocess
import threading
import traceback

import logging
logging.basicConfig(filename='/tmp/idleMining.log', encoding='utf-8', level=logging.DEBUG, format='%(asctime)s %(message)s', datefmt='%Y-%m-%d %H:%M:%S')

def activeChanged(param):
	global miner
	try:
		logging.info('ActiveChanged signal = {}'.format(param))
		if param and miner is None:
			cmd = '/home/dlk/ethereum/gminer/miner --algo ethash --server eth.2miners.com:2020 --user 0xa5B34936D76037B4074d3633632c55A163e0C6F1.laptop --api 10050'
			miner = subprocess.Popen(cmd, shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)
			logging.info('started miner')
		elif not param and miner is not None:
			miner.terminate()
			miner.communicate()
			miner = None
			logging.info('stopped miner')
	except Exception as e:	
		logging.exception('unexpected exception in activeChanged function:\n{}\n\n'.format(e))

def dbusMonitor():
	try:
		logging.info('starting dbusMonitor thread')
		from pydbus import SessionBus
		bus = SessionBus()
		gnome_proxy = bus.get('org.gnome.ScreenSaver')
		gnome_con = gnome_proxy.ActiveChanged.connect(activeChanged)
		freedesktop_proxy = bus.get('org.freedesktop.ScreenSaver')
		freedesktop_con = freedesktop_proxy.ActiveChanged.connect(activeChanged)
		from gi.repository import GLib
		loop = GLib.MainLoop()
		loop.run()
	except Exception as e:	
		logging.exception('unexpected exception in dbusMonitor thread:\n{}\n\n'.format(e))

def xscreensaverMonitor():
	try:
		logging.info('starting xscreensaverMonitor thread')
		cmd = 'xscreensaver-command -watch'
		proc = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
		while True:
			line = proc.stdout.readline().decode('utf-8').strip()
			if (line.startswith('BLANK ') or line.startswith('LOCK ')):
				activeChanged(True)
			elif line.startswith('UNBLANK '):
				activeChanged(False)
	except Exception as e:
		logging.exception('unexpected exception in xscreenSaver thread:\n{}\n\n'.format(e))

try:
	miner = None
	dbus_thread = threading.Thread(target=dbusMonitor)
	dbus_thread.start()
	if shutil.which('xscreensaver-command') is not None:
		xscreensaver_thread = threading.Thread(target=xscreensaverMonitor)
		xscreensaver_thread.start()
		xscreensaver_thread.join()
	dbus_thread.join()
except KeyboardInterrupt:
	logging.info('terminated with Ctrl-C')
except Exception as e:
	logging.exception('unexpected exception in main:\n{}\n\n'.format(e))
